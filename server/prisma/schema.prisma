generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Profile {
  manager
  judge
  coordinator
  representative
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String
  profile  Profile?
  games    Game[]
}

model Project {
  id         Int    @id @default(autoincrement())
  name       String
  permission String
}

enum Unity {
  bh
  contagem
  gutierrez
  novalima
}

model Group {
  id    Int    @id @default(autoincrement())
  name  String @unique
  unity Unity

  // codcur Int
  // codper Int
  teams Team[]
}

model Modality {
  id              Int    @id @default(autoincrement())
  name            String @unique
  membersQuantity Int
  teamsQuantity   Int
  teams           Team[]
  games           Game[]
}

model Place {
  id   Int    @id @default(autoincrement())
  name String @unique

  games Game[]
}

model Genre {
  id    Int    @id @default(autoincrement())
  name  String @unique
  teams Team[]
}

model Team {
  id         Int    @id @default(autoincrement())
  name       String @unique
  modalityId Int?
  groupId    Int?
  genreId    Int?
  students   Json

  genre    Genre?    @relation(fields: [genreId], references: [id])
  group    Group?    @relation(fields: [groupId], references: [id])
  modality Modality? @relation(fields: [modalityId], references: [id])
  points   Point[]

  @@index([genreId], map: "Team_genreId_fkey")
  @@index([groupId], map: "Team_groupId_fkey")
  @@index([modalityId], map: "Team_modalityId_fkey")
}

model Game {
  id         Int      @id @default(autoincrement())
  date       DateTime
  startHours String
  endHours   String
  comments   String?
  teams      Json

  placeId    Int?
  modalityId Int?
  userId     Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  place    Place?    @relation(fields: [placeId], references: [id])
  modality Modality? @relation(fields: [modalityId], references: [id])
  user     User?     @relation(fields: [userId], references: [id])
  points   Point[]
}

model Point {
  id     Int  @id @default(autoincrement())
  gameId Int?
  teamId Int?
  goals  Int
  points Int

  Game Game? @relation(fields: [gameId], references: [id])
  Team Team? @relation(fields: [teamId], references: [id])
}
