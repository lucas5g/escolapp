name: CICD
on:
  push:
    branches:
     - main

jobs:
  # install-dependences:
  #   name: Install Dependences
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Cache node_modules
  #       uses: actions/cache@v3 
  #       id: cache_node_modules
  #       with:
  #         path: |
  #           server/node_modules
  #           web/node_modules
  #           test/node_modules
  #         key: ${{ runner.os }}-node_modules

  #     - name: Install Pacotes Server
  #       if: steps.cache_node_modules.outputs.cache-hit != 'true'
  #       run : cd server && npm ci 

  #     - name: Install Pacotes Web
  #       if: steps.cache_node_modules.outputs.cache-hit != 'true'
  #       run : cd web && npm ci 

  #     - name: Install Pacotes test
  #       if: steps.cache_node_modules.outputs.cache-hit != 'true'
  #       run : cd test && npm ci

  tests-frontend:
    name: Tests frontend
    runs-on: ubuntu-latest
    needs: install-dependences 
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3 
        id: cache-web
        with:
          path: |
            server/node_modules
            web/node_modules
            test/node_modules
          key: ${{ runner.os }}-node_modules-web
          restore-key: ${{ runner.os }}-node_modules-web

      - name: Install dependencies
        if: steps.cache_node_modules.outputs.cache-hit != 'true'
        run: cd web && npm ci

      - name: Check typescript
        run: cd web && npx tsc

      - name: Run unit tests 
        run : cd web && npm run build 

  tests-backend:
    name: Tests backend
    runs-on: ubuntu-latest 
    needs: install-dependences     
    services:
      mysql:
        image: mysql 
        ports: 
          - '3306:3306'
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: csa
    env: 
      DATABASE_URL: mysql://root:root@localhost/csa
      JWT_SECRET: token

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Cache node_modules
        uses: actions/cache@v3 
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node_modules

      - name: Install dependencies
        run : cd server && npm ci

      - name: Database run push
        run: cd server && npx prisma db push
      
      - name: Database run seed 
        run: cd server && npx prisma db seed

      - name: Check Typescript
        run : cd server && npx tsc

      - name: Run unit tests 
        run : cd server && npm test

  deploy: 
    name: Deploy
    runs-on: ubuntu-latest
    needs: [tests-frontend, tests-backend]
    steps: 
      - name: Install ssh keys 
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    
      - name: Git pull and build application
        run: 
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd projects/csa && git pull && source ~/.nvm/nvm.sh && cd server && npm i && npm run build && pm2 restart csa --update-env"
  
  test-e2e:
    name: Test e2e
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install dependencias
        run : cd test && npm ci

      - name: Run tests e2e
        run : cd test && npm test --email=lucas@mail.com --password=qweqwe






