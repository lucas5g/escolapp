name: CICD
on:
  push:
    branches:
     - main

jobs:
  tests-frontend:
    name: Tests frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3 
        with:
          path: server/node_modules
          key : ${{ runner.os }}-node_modules-web

      - name: Install dependencies
        run: cd web && npm ci

      - name: Check typescript
        run: cd web && npx tsc

      - name: Run unit tests 
        run : cd web && npm run build 

  tests-backend:
    name: Tests backend
    runs-on: ubuntu-latest 
    services:
      mysql:
        image: mysql 
        ports: 
          - '3306:3306'
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: csa
    env: 
      DATABASE_URL: mysql://root:root@localhost/csa
      JWT_SECRET: token

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Cache node_modules
        uses: actions/cache@v3 
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node_modules-backend

      - name: Install dependencies
        run : cd server && npm ci

      - name: Database run push
        run: cd server && npx prisma db push
      
      - name: Database run seed 
        run: cd server && npx prisma db seed

      - name: Check Typescript
        run : cd server && npx tsc

      - name: Run unit tests 
        run : cd server && npm test

  test-e2e:
    name: Tests e2e
    runs-on: ubuntu-latest
    needs: [tests-frontend, tests-backend]
    steps:

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install dependencia server
        run : cd server && ci 

      - name: Install dependencies web
        run : cd web && npm ci

      - name: Run server
        run : cd server && npm run dev

      - name: Curl
        run : curl http://localhost:8000


  update: 
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test-e2e]
    steps: 
      - name: Install ssh keys 
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    
      - name: Git pull and build application
        run: 
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd projects/csa && git pull && source ~/.nvm/nvm.sh && cd server && npm i && npm run build && pm2 restart csa --update-env"
  







